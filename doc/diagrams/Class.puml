@startuml

Inventory <-- Player
Room <-- Castle
Objects <-- Inventory
Vector2 <-- Player
Rooms <-- Room
Ground <-- Room
Player <-- Room
Objects <-- Player
Player <-- Entity
Bat <-- Entity
Door <-- Room
Objects <-- Door
Doors <-- Door
Open <-- Door 

class Vector2< TYPE >
{
    - x : TYPE
    - y : TYPE

    + Magnitude() : TYPE
    + MagnitudeSq() : TYPE
    + Normalize()
    + Normalized() : Vector2< TYPE >
    + Direction() : TYPE
    + ToString() : chaîne de caractères
    + Dot() : TYPE
}

class Player <? Extends Entity >
{
    - score : entier
    - money : entier
    - inventory : Inventaire
    - hand : Objects
    - keyActions : Paire< entier, lien sur fonction - callback >

    + AddLife( IN entier )
    + getHand() : Objects
    + AddMoney( IN entier )
    + getMoney() : entier
    + getScore() : entier
    + getAction( IN entier ) : lien sur fonction - callback

    - MoveLeft()
    - MoveRight()
    - MoveUp()
    - MoveDown()
    - Jump()
    - LongJump()
    - Pickup()
    - Use()
    - PutInHand()
    - Open()
}

class Inventory
{
    - objects : Paire< Objects, entier >
    - effects : Paire< Objects, lien sur fonction - callback >

    + Consume( IN Objects )
    + ItemsLeft( IN Objects ) : entier
    + getEffect( IN Objects ) : lien sur fonction - callback

    - LifePotion()
    - GrapplingHook()
    - Torch()
}

abstract class Entity
{
    - life : entier
    - position : Vector2< entier >
    - direction : Vector2< entier >

    + getPosition() : Vector2< entier >
    + getDirection() : Vector2< entier >
    + getLife() : entier
}

class Bat <? Extends Entity >
{
    + Move()
    + Attack()
}

enum Objects
{
    + CROWBAR = 0
    + IRON_KEY = 1
    + GOLDEN_KEY = 2
    + GRAPPLING_HOOK = 3
    + TORCH = 4
    + LIFE_POTION = 5
    + HINT_1 = 6
    + HINT_2 = 7
    + HINT_3 = 8
    + CURSED_RING = 9
    + EGG = 10
}

class Castle
{
    - rooms : tableau 2D de Room

	+ InitializeCastle()
	+ LoadCastle()
	+ SaveCastle()
}

enum Rooms
{
    + PIECE = 0
    + COULOIR = 1
}

enum Ground
{
    + MUR = 'M'
    + SOL = '_'
	+ OBLIVION = 'O'
	+ OBLIVION_ROOM = 'Q' 
    + IRON_KEY = 'I'
    + GOLDEN_KEY = 'G'
    + USE_GRAPPLING_HOOK = 'H'
    + LIFE_POTION = 'L'
	+ BAT = 'B'
	+ MONEY='Z'
    + HINT_1 = 'X'
    + HINT_2 = 'Y'
    + HINT_3 = 'Z'
    + CURSED_RING = 'R'
    + EGG = 'E'
}

enum Doors
{
	+ MUR = 'M'
	+ OUVERTURE = 'O'
	+ DOOR = 'D'
	+ GRIDE = 'G'
	+ CHEST = 'C'
	+ FIREPLACE = 'F'
}

enum Open
{
	+ OPEN = 'O'
	+ OPEN_IMPOSSIBLE = 'N'
	+ CROWBAR = 'B'
	+ IRON_KEY = 'I'
	+ GOLD_KEY = 'G'
}

class Door
{
	- Type : Doors
	- Open : Open
	- Link_Room_Object : entier
	- Light : bool 
	- Light_On : bool 
}

class Room
{
    - id : entier
    - type : Salle
    - organisation : tableau 2D de Ground
    - player : Player
    - lit : booléen

	+ LoadRoom()
}






@enduml
